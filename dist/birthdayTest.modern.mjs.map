{"version":3,"file":"birthdayTest.modern.mjs","sources":["../src/index.ts"],"sourcesContent":["// \r\nclass DaysToCome {\r\n  textGreeting: string;\r\n  textDaysLeft: string;\r\n  textDayLeft: string;\r\n  textBirthDay: string;\r\n\r\n  constructor(textGreeting: string, textDaysLeft: string, textDayLeft: string, textBirthDay: string) {\r\n    this.textGreeting = textGreeting;\r\n    this.textDaysLeft = textDaysLeft;\r\n    this.textDayLeft = textDayLeft;\r\n    this.textBirthDay = textBirthDay;\r\n  }\r\n  YearsOld(DOB: string) {\r\n    const birthDay = parseInt(DOB.split(\"-\")[2]);\r\n    const birthMonth = parseInt(DOB.split(\"-\")[1]);\r\n    const birthYear = parseInt(DOB.split(\"-\")[0]);\r\n    let yearOld = [];\r\n    if (new Date().getDate() >= birthDay || new Date().getMonth() <= birthMonth) {\r\n      yearOld.push(new Date().getDate() < birthDay && new Date().getMonth() < birthMonth ? new Date().getFullYear() - birthYear - 1 : new Date().getFullYear() - birthYear);\r\n    }\r\n    if (yearOld.length) {\r\n      return yearOld;\r\n    }\r\n    return;\r\n  }\r\n\r\n  DaysToBirthDay(DOB: string, DaysLeft: any, el: string, nameClass: string) {\r\n    const birthDay = parseInt(DOB.split(\"-\")[2]);\r\n    const birthMonth = parseInt(DOB.split(\"-\")[1]);\r\n    const toDay = new Date().getDate();\r\n    const toMonth = new Date().getMonth() + 1;\r\n\r\n    const diffDays = Math.floor((+new Date(birthMonth + \"-\" + birthDay) - +new Date(`'${toMonth}-${toDay}'`)) / 86400000);\r\n    const checkDayorDays = (dayOrDays: any) => {\r\n      switch (dayOrDays) {\r\n        case true:\r\n          return `${diffDays} ${this.textDayLeft || \" \"}`;\r\n        case false:\r\n          return `${diffDays} ${this.textDaysLeft || \" \"}`;\r\n      }\r\n      return;\r\n    };\r\n    const checkDaysLeft = (checkDays: number) => {\r\n      switch (new Date().getDate() >= checkDays) {\r\n        case true:\r\n          return `${checkDays}`;\r\n        case false:\r\n          return `${checkDays}`;\r\n      }\r\n    };\r\n    switch (diffDays) {\r\n      case 0:\r\n        return ` ${el ? `<${el} class=\"greeting\">` : \"\"} ${this.textGreeting || \"\"} ${el ? `</${el}>}` : \"\"}`;\r\n      default:\r\n        if (diffDays <= parseInt(DaysLeft) && 0 <= diffDays) {\r\n          return `${el ? `<${el} class=\"${nameClass}\">` : \"\"} ${this.textBirthDay || \"\"} ${checkDayorDays(checkDaysLeft(diffDays) && diffDays <= 1)} ${el ? `</${el}>` : \"\"}`;\r\n        }\r\n    }\r\n    return;\r\n  }\r\n}\r\n//====DaysGone=====\r\nclass DaysGone {\r\n  textDaysGone: any;\r\n  textDayGone: any;\r\n  textBirthDayGone: any;\r\n  constructor({ textDaysGone, textDayGone, textBirthDayGone }: any) {\r\n    this.textDaysGone = textDaysGone;\r\n    this.textDayGone = textDayGone;\r\n    this.textBirthDayGone = textBirthDayGone;\r\n  }\r\n\r\n  DaysGoneBirthDay(DOB: string, DayGone: any, el: string, nameClass: string) {\r\n    const birthDay = parseInt(DOB.split(\"-\")[2]);\r\n    const birthMonth = parseInt(DOB.split(\"-\")[1]);\r\n    const toDay = new Date().getDate();\r\n    const toMonth = new Date().getMonth() + 1;\r\n\r\n    const diffDays = Math.floor((+new Date(birthMonth + \"-\" + birthDay) - +new Date(`'${toMonth}-${toDay}'`)) / 86400000);\r\n\r\n    const goneDays = -diffDays;\r\n    switch (goneDays) {\r\n      case 1:\r\n        return ` ${el ? `<${el} class=\"${nameClass}\">` : \"\"}${this.textBirthDayGone || \"\"} ${goneDays} ${this.textDayGone || \" \"} ${el ? `</${el}>` : \"\"}`;\r\n      default:\r\n        if (goneDays > 1 && goneDays <= parseInt(DayGone)) {\r\n          return `${el ? `<${el} class=\"${nameClass}\">` : \"\"} ${this.textBirthDayGone || \"\"} ${goneDays} ${this.textDaysGone || \" \"} ${el ? `</${el}>` : \"\"}`;\r\n        }\r\n    }\r\n\r\n    return;\r\n  }\r\n}\r\n//######\r\nclass JointDate {\r\n  YearJoint = (jointed: any, dayFormat: any) => {\r\n    const jointYear = new Date(jointed).getFullYear();\r\n    const jointMonth = new Date(jointed).getMonth();\r\n    const jointDayNumber = new Date(jointed).getDate();\r\n    const jointDayName = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"][new Date(jointed).getDay()];\r\n\r\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n    const jointMonthName = months[jointMonth];\r\n\r\n    if (dayFormat === \"dayName\") {\r\n      return `${jointDayName} ${jointMonthName} ${jointYear}`;\r\n    }\r\n    if (dayFormat === \"dayNumber\") {\r\n      return `${jointDayNumber} ${jointMonthName} ${jointYear}`;\r\n    }\r\n    if (dayFormat === \"\") {\r\n      return `${jointMonthName} ${jointYear}`;\r\n    }\r\n    if (dayFormat === \"undefined\") {\r\n      return `${jointMonthName} ${jointYear}`;\r\n    }\r\n    if (dayFormat === undefined) {\r\n      return `${jointMonthName} ${jointYear}`;\r\n    }\r\n    if (dayFormat.length) {\r\n      return `${jointMonthName} ${jointYear}`;\r\n    }\r\n    if (dayFormat === null) {\r\n      return `${jointMonthName} ${jointYear}`;\r\n    }\r\n    return;\r\n  };\r\n}\r\n\r\nexport { DaysToCome, DaysGone, JointDate };\r\n"],"names":["DaysToCome","constructor","textGreeting","textDaysLeft","textDayLeft","textBirthDay","this","YearsOld","DOB","birthDay","parseInt","split","birthMonth","birthYear","yearOld","Date","getDate","getMonth","push","getFullYear","length","DaysToBirthDay","DaysLeft","el","nameClass","toDay","toMonth","diffDays","Math","floor","dayOrDays","checkDayorDays","checkDays","checkDaysLeft","DaysGone","textDaysGone","textDayGone","textBirthDayGone","DaysGoneBirthDay","DayGone","goneDays","JointDate","YearJoint","jointed","dayFormat","jointYear","jointMonth","jointDayNumber","jointDayName","getDay","jointMonthName","undefined"],"mappings":"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"}