{"version":3,"file":"birthday-test.modern.js","sources":["../src/index.ts"],"sourcesContent":["// \r\nclass DaysToCome {\r\n  textGreeting?: string |undefined;\r\n  textDaysLeft?: string |undefined;\r\n  textDayLeft?: string |undefined;\r\n  textBirthDay?: string |undefined;\r\n\r\n\r\n\r\nconstructor(customTextDaysToCome:any) {\r\n  this.textGreeting = customTextDaysToCome?.textGreeting ;\r\n  this.textDaysLeft = customTextDaysToCome?.textDaysLeft  ;\r\n  this.textDayLeft = customTextDaysToCome?.textDayLeft ;\r\n  this.textBirthDay = customTextDaysToCome?.textBirthDay ;\r\n\r\n}\r\nYearsOld(DOB: string) {\r\n  const birthDay = parseInt(DOB.split(\"-\")[2]);\r\n  const birthMonth = parseInt(DOB.split(\"-\")[1]);\r\n  const birthYear = parseInt(DOB.split(\"-\")[0]);\r\n  let yearOld:number[] = [];\r\n  if (birthDay || birthMonth || birthYear) {\r\n    yearOld.push(new Date().getDate() < birthDay && new Date().getMonth() + 1 < birthMonth ? new Date().getFullYear() - birthYear - 1 : new Date().getFullYear() - birthYear);\r\n  }\r\n  if (yearOld.length) {\r\n    return yearOld;\r\n  }\r\n  return;\r\n}\r\nDaysToBirthDay(DOB: string, DaysLeft: string, el?: string, nameClass?: string) {\r\n  const birthDay = parseInt(DOB.split(\"-\")[2]);\r\n  const birthMonth = parseInt(DOB.split(\"-\")[1]);\r\n  const toDay = new Date().getDate();\r\n  const toMonth = new Date().getMonth() + 1;\r\n  \r\n  const diffDays = Math.floor((+new Date(birthMonth + \"-\" + birthDay) - +new Date(`'${toMonth}-${toDay}'`)) / 86400000);\r\n  const checkDayorDays = (dayOrDays: any) => {\r\n    switch (dayOrDays) {\r\n      case true:\r\n        return `${diffDays} ${this.textDayLeft || \" \"}`;\r\n      case false:\r\n        return `${diffDays} ${this.textDaysLeft || \" \"}`;\r\n    }\r\n    return;\r\n  };\r\n  const checkDaysLeft = (checkDays: number) => {\r\n    switch (new Date().getDate() >= checkDays) {\r\n      case true:\r\n        return `${checkDays}`;\r\n      case false:\r\n        return `${checkDays}`;\r\n    }\r\n  };\r\n  switch (diffDays) {\r\n    case 0:\r\n      return ` ${el ? `<${el} class=\"greeting\">` : \"\"} ${this.textGreeting || \"\"} ${el ? `</${el}>}` : \"\"}`;\r\n    default:\r\n      if (diffDays <= parseInt(DaysLeft) && 0 <= diffDays) {\r\n        return `${el ? `<${el} class=\"${nameClass}\">` : \"\"} ${this.textBirthDay || \"\"} ${checkDayorDays(checkDaysLeft(diffDays) && diffDays <= 1)} ${el ? `</${el}>` : \"\"}`;\r\n      }\r\n  }\r\n  return;\r\n}\r\n}\r\n//====DaysGone=====\r\nclass DaysGone {\r\ntextDaysGone?: string;\r\ntextDayGone?: string;\r\ntextBirthDayGone?: string;\r\nconstructor(customTextDaysGone:any) {\r\n  this.textDaysGone = customTextDaysGone?.textDaysGone;\r\n  this.textDayGone = customTextDaysGone?.textDayGone;\r\n  this.textBirthDayGone = customTextDaysGone?.textBirthDayGone;\r\n}\r\n\r\nDaysGoneBirthDay(DOB: string, DayGone: any, el?: string, nameClass?: string) {\r\n  const birthDay = parseInt(DOB.split(\"-\")[2]);\r\n  const birthMonth = parseInt(DOB.split(\"-\")[1]);\r\n  const toDay = new Date().getDate();\r\n  const toMonth = new Date().getMonth() + 1;\r\n\r\n  const diffDays = Math.floor((+new Date(birthMonth + \"-\" + birthDay) - +new Date(`'${toMonth}-${toDay}'`)) / 86400000);\r\n\r\n  const goneDays = -diffDays;\r\n  switch (goneDays) {\r\n    case 1:\r\n      return ` ${el ? `<${el} class=\"${nameClass}\">` : \"\"}${this.textBirthDayGone || \"\"} ${goneDays} ${this.textDayGone || \" \"} ${el ? `</${el}>` : \"\"}`;\r\n    default:\r\n      if (goneDays > 1 && goneDays <= parseInt(DayGone)) {\r\n        return `${el ? `<${el} class=\"${nameClass}\">` : \"\"} ${this.textBirthDayGone || \"\"} ${goneDays} ${this.textDaysGone || \" \"} ${el ? `</${el}>` : \"\"}`;\r\n      }\r\n  }\r\n\r\n  return;\r\n}\r\n}\r\n//######\r\nclass JointDate {\r\nYearJoint = (jointed: any, dayFormat: any) => {\r\n  const jointYear = new Date(jointed).getFullYear();\r\n  const jointMonth = new Date(jointed).getMonth();\r\n  const jointDayNumber = new Date(jointed).getDate();\r\n  const jointDayName = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"][new Date(jointed).getDay()];\r\n\r\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n  const jointMonthName = months[jointMonth];\r\n\r\n  if (dayFormat === \"dayName\") {\r\n    return `${jointDayName} ${jointMonthName} ${jointYear}`;\r\n  }\r\n  if (dayFormat === \"dayNumber\") {\r\n    return `${jointDayNumber} ${jointMonthName} ${jointYear}`;\r\n  }\r\n  if (dayFormat === \"\") {\r\n    return `${jointMonthName} ${jointYear}`;\r\n  }\r\n  if (dayFormat === \"undefined\") {\r\n    return `${jointMonthName} ${jointYear}`;\r\n  }\r\n  if (dayFormat === undefined) {\r\n    return `${jointMonthName} ${jointYear}`;\r\n  }\r\n  if (dayFormat.length) {\r\n    return `${jointMonthName} ${jointYear}`;\r\n  }\r\n  if (dayFormat === null) {\r\n    return `${jointMonthName} ${jointYear}`;\r\n  }\r\n  return;\r\n};\r\n}\r\n\r\nexport { DaysToCome, DaysGone, JointDate };\r\n"],"names":["DaysToCome","constructor","customTextDaysToCome","this","textGreeting","textDaysLeft","textDayLeft","textBirthDay","YearsOld","DOB","birthDay","parseInt","split","birthMonth","birthYear","yearOld","push","Date","getDate","getMonth","getFullYear","length","DaysToBirthDay","DaysLeft","el","nameClass","toDay","toMonth","diffDays","Math","floor","dayOrDays","checkDayorDays","checkDays","checkDaysLeft","DaysGone","customTextDaysGone","textDaysGone","textDayGone","textBirthDayGone","DaysGoneBirthDay","DayGone","goneDays","JointDate","YearJoint","jointed","dayFormat","jointYear","jointMonth","jointDayNumber","jointDayName","getDay","jointMonthName","undefined"],"mappings":"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"}